[tool.poetry]
name = "hgvs2seq"
version = "0.1.0"
description = "Simple package that will take as input a list of hgvs variants and output the final sequence."
authors = ["Jules <jules@example.com>"]
readme = "README.md"
license = "MIT"
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Science/Research",
    "Topic :: Scientific/Engineering :: Bio-Informatics",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]
include = ["hgvs2seq/py.typed"]

[tool.poetry.dependencies]
python = "^3.10"
pydantic = "^2.4.2"
pyyaml = "^6.0"
spliceai = "^1.3.1"
tensorflow = ">=1.2.0"
click = "^8.1.7"
psycopg2-binary = { version = "^2.9.10", optional = true }
typing-extensions = { version = "^4.0.0", python = "<3.10" }
nose = "^1.3.7"

[tool.poetry.scripts]
hgvs2seq = "hgvs2seq.cli:main"

[tool.poetry.extras]
postgres = ["psycopg2-binary"]
postgres-binary = ["psycopg2-binary"]
all = ["psycopg2-binary"]

[tool.poetry.group.dev.dependencies]
pytest = "^8.0.0"
pytest-cov = "^4.1.0"
pytest-mock = "^3.12.0"
pytest-xdist = "^3.5.0"
ruff = "^0.1.0"
mypy = "^1.5.1"
pre-commit = "^3.5.0"
black = "^23.10.0"
isort = "^5.12.0"
mkdocs = "^1.5.3"
mkdocs-material = "^9.4.1"
mkdocstrings = {extras = ["python"], version = "^0.23.0"}
types-PyYAML = "^6.0.12"
psycopg2-binary = "^2.9.10"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
addopts = "-v --cov=hgvs2seq --cov-report=term-missing"

[tool.coverage.run]
source = ["hgvs2seq"]
omit = [
    "**/tests/*",
    "**/__init__.py",
]

[tool.coverage.report]
show_missing = true
skip_covered = true
fail_under = 0

[tool.black]
line-length = 88
target-version = ["py310"]
include = '\.pyi?$'

[tool.isort]
profile = "black"
line_length = 88
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.ruff]
line-length = 88
target-version = "py310"
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "C",  # flake8-comprehensions
    "B",  # flake8-bugbear
    "UP", # pyupgrade
    "N",  # pep8-naming
    "PL", # pylint
    "RUF", # Ruff-specific rules
]
ignore = [
    "E501",  # Line too long (handled by black)
    "B008",  # Do not perform function calls in argument defaults
]

[tool.ruff.per-file-ignores]
"tests/*" = ["S101"]  # Use of assert in tests is fine

[tool.mypy]
strict = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_return_any = true
warn_unreachable = true
warn_no_return = true
no_implicit_reexport = true
pretty = true
show_error_context = true
show_column_numbers = true
show_error_codes = true

[[tool.mypy.overrides]]
module = ["spliceai", "tensorflow", "hgvs.*"]
ignore_missing_imports = true
